@page "{UserName}"
@model RazorPages.Pages.Account.UserModel

<h2>@Model.ViewingUser.DisplayName</h2>

<div class="container">

	<div class="row">

		<div class="col-8">

			<h3 class="mt-5">Галерея</h3>
			<div class="row" id="gallery-container">

			</div>
			<button class="btn btn-primary m-3" id="show-gallery-container" onclick="ShowFull(`gallery-container`)">Показать все</button>
			<button class="btn btn-primary m-3" id="hide-gallery-container" onclick="HideFull(`gallery-container`)" style="display: none;">Скрыть</button>

			<h3 class="mt-5">Продается</h3>
			<div class="row" id="onSale-container">

			</div>

			<h3 class="mt-5">Сгенерированно</h3>
			<div class="row" id="generated-container">
			</div>

		</div>

		<div class="col-4">	

		</div>

	</div>
</div>


@{
	string getImagesInheapActionUrl = $"/api/UserImages/{Model.ViewingUser.UserName}/InHeap";
	string getImagesInGalleryActionUrl = $"/api/UserImages/{Model.ViewingUser.UserName}/InGallery";
	string getImagesOnSaleActionUrl = $"/api/UserImages/{Model.ViewingUser.UserName}/OnSale";
}

<script>

	const showFirst = 10;

	function getCardHtml(id, src, name, desc, isHidden) {
	return	`<div class="col-3 card g-2" id="${id}" ${isHidden ? "data-hidden" : ""}>
				<img class="card-img-top" src="/${src}" alt="Card image cap">
				<div class="card-body">
					<h5 class="card-title">${name}</h5>
					<p class="card-text">${desc}</p>
				</div>
			</div>`;
	}

	function getGeneratedCardHtml(id, src, genAgoText, isHidden) {
		return `<div class="col-3 card g-2" id="${id}" ${isHidden ? "data-hidden" : ""}>
					<img class="card-img-top" src="/${src}" alt="Card image cap">
					<div class="card-body">
						<h5 class="card-title">${name}</h5>
						<small class="text-muted">${genAgoText}</p>
					</div>
				</div>`;
	}

	gallery_container = $("#gallery-container");

	$(document).ready(UpdateImagesInHeap);

	async function UpdateImagesInHeap() {
		console.log("sending get for images in gallery...");

		return $.ajax({
			url: "@getImagesInGalleryActionUrl",
			method: "get",
			success: json => {

				gallery_container.html("");

				for (const item of json) {

					isHidden = gallery_container.children().length >= showFirst;

					gallery_container.append(getCardHtml(
						item.id,
						item.webFullName,
						item.name,
						item.description,
						isHidden
					));

					if (isHidden)
						gallery_container.children().last().hide();

					gallery_container.children().last().click(function (event) {
						SelectImage(item.id);
					});

				};


			},
			error: (result, textStatus) => {
				console.log(textStatus);
			}
		});
	};

	function SelectImage(id) {
		console.log(`selecting ${id}`);
	}

	function ShowFull(name) {
		$(`#${name} div[data-hidden]`).show();
		$(`#show-${name}`).hide();
		$(`#hide-${name}`).show();
	}

	function HideFull(name) {
		$(`#${name} div[data-hidden]`).hide();
		$(`#show-${name}`).show();
		$(`#hide-${name}`).hide();
	}

</script>