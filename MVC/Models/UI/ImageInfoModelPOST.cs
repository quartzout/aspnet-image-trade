namespace RazorPages.Models.Classes.UI;

/*
 * Как чел в туториале отправлял и загружал картинки клиенту, используя дефолтную безкартиночную базу данных:
 * Создал модель, описывающую картинку (айди, название и т.п.) и задал ей два свойства: строковый путь к файлу 
 * и свойство imageFile	специального типа IFormImage, хранящее в себе саму картинку, однако тк ДБ не может хранить картинки,
 * последнее свойство отметил аттрибутом NotMapped, которое предотвращает свойство от добавления в базу данных.
 * Пользователь заполняет в стандартной Create-форме модель картинки, и asp-for тег для <input> автоматически подставляет
 * под imageFile окошко для выбора файла с комптютера клиента. Когда контроллер получает post-запрос с созданной моделью,
 * полученная модель изображения уже содержит в себе, в imageFile, весь переданный файл картинки. Контроллер генерирует путь 
 * в папку со статическими файлами и под уникальным названием с помощью filestream записывает туда этот imageFile,
 * а полученный полный путь записывает в свойство пути в обьект полученной модели, после чего сохраняет эту модель в дб.
 * Получается, что с клиента с формы отправился post-запрос с моделью картинки, где сам файл картинки содержится в специальном
 * свойстве, предназначенным только для этого - передачи картинки на сервер. Сервер сохранил эту картинку из свойства
 * в статические файлы, а модель, уже без свойства файла (т.к. на нем NotMapped), записал в дб. В итоге в дб хранятся
 * модели, содержащие только числа и строки - айди, название и путь к соответствующим им картинкам в папке статических файлов.
 *
 * Что касается передачи картинок клиенту, тут все делается точно также, как и с любыми другими картинками - ведь сохраненные
 * картинки являются статическими файлами. В нужной форме в теге <img> указывается путь до файла на сервере, и при отправке
 * сгенерированного html клиенту вместе с ним отправляется нужная картинка.
 *
 */


public class ImageInfoModelPOST
{
    public int Id { get; set; }
    public string Name { get; set; } = String.Empty;
    public string? Description { get; set; }
    public bool IsOnSale { get; set; }
    public int? Price { get; set; }
}